steps:
- id: Test
  name: golang
  args: ['go', 'test', '-v']

- id: Build Image
  name: 'docker'
  args: [ 'build', '-t', 'gcr.io/$PROJECT_ID/desafio-ci', '.' ]

- id: "Building image from Dockerfile.prod"
  name: 'docker'
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/desafio-ci:$SHORT_SHA', '-f', 'Dockerfile.prod', '.']

- id: "Pushing image"
  name: 'docker'
  args: ['push', 'gcr.io/$PROJECT_ID/desafio-ci:$SHORT_SHA']

- id: "Adjusting deployment file"
  name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: '/bin/sh'
  args: 
    - '-c'
    - |
      sed 's#img-app-deployment#gcr.io/$PROJECT_ID/desafio-ci:$SHORT_SHA#g' ./k8s/deployment.yml > ./k8s/deployment-new.yml;
      cat ./k8s/deployment-new.yml;

- id: "Deploying k8s"
  name: 'gcr.io/cloud-builders/kubectl'
  args:
    - 'apply'
    - '-f'
    - './k8s/deployment-new.yml'
  env:
    - 'CLOUDSDK_COMPUTE_ZONE=us-central1-c'
    - 'CLOUDSDK_CONTAINER_CLUSTER=desafio-cd'